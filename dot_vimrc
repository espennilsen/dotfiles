" Vundle plugin management.
set nocompatible
filetype off  " required!
set t_Co=256
set rtp+=~/.vim/bundle/Vundle.vim/  " Vundle requirements
call vundle#begin() " Vundle requirements

" My bundles
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-scripts/Command-T'
Plugin 'Lokaltog/vim-powerline'
Plugin 'tangledhelix/vim-octopress'
"Required by vim-snipmate
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'honza/vim-snippets'
" End of vim-snipmate requirements
Plugin 'garbas/vim-snipmate'
Plugin 'desert.vim'

call vundle#end() " Required for Vundle!
filetype plugin indent on     " required for Vundle!

" Setting
set nocompatible   " Disable vi-compatibility
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show unicode glyphs
set nowrap " don't wrap lines
set number " Show line numbers
set relativenumber " Show relative line numbers
set expandtab
set tabstop=2 " A tab is 4 spaces
set softtabstop=2 
set shiftwidth=2 " 4 spaces when you autoindent
set shiftround " use multiple shiftwidth when indenting with '<'
set smarttab " insert tabs on start according to shiftwidth, not tabstop.
set backspace=indent,eol,start " Allow backspaces of everything.
set autoindent " Always autoindent
set copyindent " Same for copying
set ignorecase " Ignore case on search
set smartcase " Except if something is uppercase.
set hlsearch " Highlight search matches
set incsearch " show search matches as you type.
set history=1000         " remember more commands and search history
set undolevels=1000      " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class
set visualbell " Shut up!
set noerrorbells " Dont beep!
set nobackup
set noswapfile
set history=1000         " remember more commands and search history
set undolevels=1000      " use many muchos levels of undo
set list
set listchars=tab:>.,trail:.,extends:#,nbsp:.
set pastetoggle=<F2>
"set mouse=a

" SnipMate settings
let g:snipMate = { 'snippet_version' : 1 }

" Keyboard mappings

map <F6> :NERDTreeToggle<CR>
" Easy window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

nmap <silent> ,/ :nohlsearch<CR>
" Colorscheme settings
if &t_Co >= 256 || has("gui_running")
   colorscheme desert
endif

if &t_Co > 2 || has("gui_running")
   " switch syntax highlighting on, when the terminal has colors
   syntax on
endif

" Powerline settings:
let g:Powerline_symbols = 'unicode' " Simulates icons and arrows using similar unicode glyphs
" let g:Powerline_symbols = 'fancy' " Simulates icons and arrows using similar unicode glyphs

" Auto chezmoi apply on saving
autocmd BufWritePost ~/.local/share/chezmoi/* ! chezmoi apply --source-path "%"

